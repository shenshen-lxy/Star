{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","onLoad","groundY","y","height","spawnNewStar","score","timer","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","startDuration","Math","random","randY","jumpHeight","maxX","width","randX","v2","gainScore","string","update","dt","gameOver","stopAllActions","director","loadScene"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACAC,IAAAA,UAAU,EAAC;AACR,iBAAQ,IADA;AAERC,MAAAA,IAAI,EAACL,EAAE,CAACM;AAFA,KAFH;AAMT;AACAC,IAAAA,eAAe,EAAC,CAPP;AAQTC,IAAAA,eAAe,EAAC,CARP;AAST;AACAC,IAAAA,MAAM,EAAC;AACH,iBAAQ,IADL;AAEHJ,MAAAA,IAAI,EAACL,EAAE,CAACU;AAFL,KAVE;AAcT;AACAC,IAAAA,MAAM,EAAC;AACH,iBAAQ,IADL;AAEHN,MAAAA,IAAI,EAACL,EAAE,CAACU;AAFL,KAfE;AAmBTE,IAAAA,YAAY,EAAC;AACT,iBAAS,IADA;AAETP,MAAAA,IAAI,EAACL,EAAE,CAACa;AAFC;AAnBJ,GAHP;AA4BL;AAEAC,EAAAA,MA9BK,oBA8BK;AACN;AACA,SAAKC,OAAL,GAAe,KAAKN,MAAL,CAAYO,CAAZ,GAAe,KAAKP,MAAL,CAAYQ,MAAZ,GAAmB,CAAjD,CAFM,CAE8C;AACpD;;AACA,SAAKC,YAAL,GAJM,CAKN;;AACA,SAAKC,KAAL,GAAa,CAAb,CANM,CAON;;AACA,SAAKC,KAAL,GAAa,CAAb;AACH,GAvCI;AAyCLF,EAAAA,YAzCK,0BAyCS;AACV,QAAIG,OAAO,GAAGrB,EAAE,CAACsB,WAAH,CAAe,KAAKlB,UAApB,CAAd;AACA,SAAKmB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACAA,IAAAA,OAAO,CAACI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AAEAL,IAAAA,OAAO,CAACM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AAEA,SAAKC,aAAL,GAAqB,KAAKrB,eAAL,GAAuBsB,IAAI,CAACC,MAAL,MAAiB,KAAKxB,eAAL,GAAuB,KAAKC,eAA7C,CAA5C;AACA,SAAKY,KAAL,GAAa,CAAb;AACH,GAlDI;AAoDLM,EAAAA,kBApDK,gCAoDe;AAChB,QAAIM,KAAK,GAAG,KAAKjB,OAAL,GAAee,IAAI,CAACC,MAAL,KAAgB,KAAKpB,MAAL,CAAYgB,YAAZ,CAAyB,QAAzB,EAAmCM,UAAlE,GAA8E,EAA1F;AACA,QAAIC,IAAI,GAAG,KAAKX,IAAL,CAAUY,KAAV,GAAiB,CAA5B;AACA,QAAIC,KAAK,GAAG,CAACN,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAsB,CAAtB,GAAwBG,IAApC;AACA,WAAOlC,EAAE,CAACqC,EAAH,CAAMD,KAAN,EAAYJ,KAAZ,CAAP;AACH,GAzDI;AA2DLM,EAAAA,SA3DK,uBA2DM;AACP,SAAKnB,KAAL,IAAa,CAAb;AACA,SAAKP,YAAL,CAAkB2B,MAAlB,GAA2B,WAAS,KAAKpB,KAAzC;AACH,GA9DI;AAgEL;AAEA;AAEAqB,EAAAA,MApEK,kBAoEGC,EApEH,EAoEO;AACR,QAAG,KAAKrB,KAAL,GAAa,KAAKS,aAArB,EAAmC;AAC/B,WAAKa,QAAL;AACA;AACH;;AACD,SAAKtB,KAAL,IAAcqB,EAAd;AACH,GA1EI;AA4ELC,EAAAA,QA5EK,sBA4EK;AACN,SAAK/B,MAAL,CAAYgC,cAAZ;AACA3C,IAAAA,EAAE,CAAC4C,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH;AA/EI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //这个属性引用了星星预置资源    \r\n        starPrefab:{\r\n           default:null,\r\n           type:cc.Prefab\r\n       },\r\n       //星星产生后消失时间的随机范围\r\n       maxStarDuration:0,\r\n       minStarDuration:0,\r\n       //地面节点，用于确定星星生成的高度\r\n       ground:{\r\n           default:null,\r\n           type:cc.Node\r\n       },\r\n       //player节点，用于获取主角弹跳的高度，和控制主角的开关\r\n       player:{\r\n           default:null,\r\n           type:cc.Node\r\n       },\r\n       scoreDisplay:{\r\n           default :null,\r\n           type:cc.Label\r\n       }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        //获取地平面的y轴坐标\r\n        this.groundY = this.ground.y +this.ground.height/2; //锚点在地板中心，所以要把二分之一补上\r\n        //生成一个新的星星\r\n        this.spawnNewStar();\r\n        //初始化计分\r\n        this.score = 0;\r\n        //计时器(星星消失)\r\n        this.timer = 0;\r\n    },\r\n\r\n    spawnNewStar(){\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        this.node.addChild(newStar);\r\n        newStar.setPosition(this.getNewStarPosition());\r\n\r\n        newStar.getComponent(\"Star\").game = this;\r\n\r\n        this.startDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition(){\r\n        var randY = this.groundY + Math.random() * this.player.getComponent(\"Player\").jumpHeight +50;\r\n        var maxX = this.node.width /2;\r\n        var randX = (Math.random() - 0.5)*2*maxX;\r\n        return cc.v2(randX,randY);\r\n    },\r\n\r\n    gainScore(){\r\n        this.score +=1;\r\n        this.scoreDisplay.string = \"Score:\"+this.score;\r\n    },\r\n\r\n    // start () {\r\n        \r\n    // },\r\n\r\n    update (dt) {\r\n        if(this.timer > this.startDuration){\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n\r\n    gameOver(){\r\n        this.player.stopAllActions();\r\n        cc.director.loadScene(\"game\");\r\n    },\r\n});\r\n"]}